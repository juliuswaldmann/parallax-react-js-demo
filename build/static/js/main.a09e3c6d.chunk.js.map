{"version":3,"sources":["Planets/Planet.tsx","Planets/assets/Planet1.png","Planets/assets/Planet2.png","Planets/assets/Planet3.png","Planets/assets/Planet4.png","Planets/assets/Planet5.png","Planets/assets/Planet6.png","Components/Star.tsx","Components/Space.tsx","Components/View.tsx","index.tsx"],"names":["Planet","props","speed","PlanetSpeed","className","alt","src","PlanetImg","style","width","size","height","borderRadius","getRandomInt","min","max","Math","ceil","floor","random","Star","thisdiv","React","createRef","useEffect","interval","setInterval","setTimeout","current","backgroundColor","error","console","clearInterval","StarSpeed","zIndex","ref","top","position","bottom","left","right","Space","Stargenerator","count","Planet1","Planet2","Planet3","Planet4","Planet5","Planet6","outarray","i","push","View","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAaeA,MAVf,SAAgBC,GACZ,OAEI,cAAC,IAAD,CAAeC,MAAOD,EAAME,YAA5B,SACI,qBAAKC,UAAWH,EAAMG,UAAY,UAAWC,IAAI,SAASC,IAAKL,EAAMM,UAAWC,MAAO,CAACC,MAAOR,EAAMS,KAAMC,OAAQV,EAAMS,KAAME,aAAc,YCP1I,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oC,YCuCzC,SAASC,EAAaC,EAAYC,GAG9B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,GAGrCM,MAxCf,SAAenB,GAAyI,IAAD,QAE7IoB,EAAUC,IAAMC,YAsBtB,OApBAC,qBAAU,WAEN,IAAIC,EAAWC,aAAY,WAEvBC,YAAW,WACP,IACIN,EAAQO,QAASpB,MAAMqB,gBAAkB,uBAA0BhB,EAAa,GAAI,KAAK,IAAO,IAClG,MAAOiB,GACLC,QAAQD,MAAMA,MAGlBjB,EAAa,EAAG,QACrB,KAEH,OAAO,WACHmB,cAAcP,MAGnB,CAACJ,IAGA,cAAC,IAAD,CAAenB,MAAOD,EAAMgC,UAAWC,OAAQ,EAA/C,SACI,qBAAK9B,UAAU,OAAO+B,IAAKd,EAASb,MAAO,CAACqB,gBAAiB,2BAC7DO,IAAG,UAAEnC,EAAMoC,gBAAR,aAAE,EAAgBD,IAAKE,OAAM,UAAErC,EAAMoC,gBAAR,aAAE,EAAgBC,OAAQC,KAAI,UAAEtC,EAAMoC,gBAAR,aAAE,EAAgBE,KAAMC,MAAK,UAAEvC,EAAMoC,gBAAR,aAAE,EAAgBG,MAAON,OAAQjC,EAAMiC,aCF/HO,MApBf,WACI,OAEI,sBAAKrC,UAAU,QAAf,UAEI,cAACsC,EAAD,CAAeC,MAAO,KAGtB,cAAC,EAAD,CAAQpC,UAAWqC,EAASlC,KAAK,OAAOP,YAAY,MAAMC,UAAW,YACrE,cAAC,EAAD,CAAQG,UAAWsC,EAASnC,KAAK,OAAOP,YAAY,MAAMC,UAAW,YACrE,cAAC,EAAD,CAAQG,UAAWuC,EAASpC,KAAK,OAAOP,YAAY,MAAMC,UAAW,YACrE,cAAC,EAAD,CAAQG,UAAWwC,EAASrC,KAAK,OAAOP,YAAY,MAAMC,UAAW,YACrE,cAAC,EAAD,CAAQG,UAAWyC,EAAStC,KAAK,MAAMP,YAAY,MAAMC,UAAW,YACpE,cAAC,EAAD,CAAQG,UAAW0C,EAASvC,KAAK,OAAOP,YAAY,OAAOC,UAAW,gBASlF,SAASsC,EAAczC,GAInB,IAFA,IAAIiD,EAAW,GAENC,EAAI,EAAGA,EAAIlD,EAAM0C,MAAOQ,IAC7BD,EAASE,KAAK,cAAC,EAAD,CAAMnB,UAAU,MAAMI,SAAU,CAACD,IAAKvB,EAAa,EAAG,KAAO,KAAM0B,KAAM1B,EAAa,EAAG,IAAM,MAAOqB,QAAS,GAAQ,MAAQiB,IAGjJ,OAEI,mCACED,IAOV,SAASrC,EAAaC,EAAaC,GAG/B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,GCxCrCuC,MAVf,WACI,OACI,qBAAKjD,UAAU,OAAf,SACI,cAAC,IAAD,UACI,cAAC,EAAD,SCFhBkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a09e3c6d.chunk.js","sourcesContent":["import {ParallaxLayer} from 'parallax-react-js';\nimport './Planet.scss';\n\nfunction Planet(props: { PlanetImg: any; size: string; PlanetSpeed: string, className?: string}) {\n    return (\n\n        <ParallaxLayer speed={props.PlanetSpeed}>\n            <img className={props.className + \" Planet\"} alt=\"Planet\" src={props.PlanetImg} style={{width: props.size, height: props.size, borderRadius: \"50%\"}}></img>\n        </ParallaxLayer>\n\n    );\n}\n\nexport default Planet;","export default __webpack_public_path__ + \"static/media/Planet1.d8331be4.png\";","export default __webpack_public_path__ + \"static/media/Planet2.23d3a911.png\";","export default __webpack_public_path__ + \"static/media/Planet3.64de4cb5.png\";","export default __webpack_public_path__ + \"static/media/Planet4.42751a8e.png\";","export default __webpack_public_path__ + \"static/media/Planet5.8e201d9d.png\";","export default __webpack_public_path__ + \"static/media/Planet6.1a88adf1.png\";","import { ParallaxLayer } from \"parallax-react-js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport './Star.scss';\n\nfunction Star (props: { StarSpeed: string; StarSize?: string; position?: {top?:string, bottom?:string, left?:string, right?:string}; zIndex?: number}) {\n    \n    const thisdiv = React.createRef<HTMLDivElement>();\n    \n    useEffect(()=>{\n\n        var interval = setInterval(function(){\n            \n            setTimeout(function(){\n                try {\n                    thisdiv.current!.style.backgroundColor = \"rgba(255, 255, 255, \" + (getRandomInt(60, 100)/100) + \")\";\n                } catch (error) {\n                    console.error(error);\n                }\n\n            }, (getRandomInt(0, 400)))\n        }, 1000)\n        \n        return () => {\n            clearInterval(interval);\n        }\n\n    }, [thisdiv])\n\n    return (\n        <ParallaxLayer speed={props.StarSpeed} zIndex={1}>\n            <div className=\"Star\" ref={thisdiv} style={{backgroundColor: \"rgba(255, 255, 255, \" + 0.7 + \")\", \n            top: props.position?.top, bottom: props.position?.bottom, left: props.position?.left, right: props.position?.right, zIndex: props.zIndex}}>\n\n            </div>\n        </ParallaxLayer>\n    )\n}\n\nfunction getRandomInt(min:number, max:number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\nexport default Star;","import Planet from '../Planets/Planet';\nimport Planet1 from '../Planets/assets/Planet1.png';\nimport Planet2 from '../Planets/assets/Planet2.png';\nimport Planet3 from '../Planets/assets/Planet3.png';\nimport Planet4 from '../Planets/assets/Planet4.png';\nimport Planet5 from '../Planets/assets/Planet5.png';\nimport Planet6 from '../Planets/assets/Planet6.png';\nimport './Space.scss';\nimport Star from './Star';\n\nfunction Space() {\n    return (\n\n        <div className=\"Space\">\n            \n            <Stargenerator count={20} ></Stargenerator>\n            \n\n            <Planet PlanetImg={Planet1} size=\"15vw\" PlanetSpeed=\"72%\" className={\"planet1\"}></Planet>\n            <Planet PlanetImg={Planet2} size=\"12vw\" PlanetSpeed=\"80%\" className={\"planet2\"}></Planet>\n            <Planet PlanetImg={Planet3} size=\"10vw\" PlanetSpeed=\"75%\" className={\"planet3\"}></Planet>\n            <Planet PlanetImg={Planet4} size=\"13vw\" PlanetSpeed=\"66%\" className={\"planet4\"}></Planet>\n            <Planet PlanetImg={Planet5} size=\"9vw\" PlanetSpeed=\"92%\" className={\"planet5\"}></Planet>\n            <Planet PlanetImg={Planet6} size=\"25vw\" PlanetSpeed=\"110%\" className={\"planet6\"}></Planet>\n\n        </div>\n\n    );\n}\n\nexport default Space;\n\nfunction Stargenerator(props: {count: number}) {\n      \n    var outarray = [];\n\n    for (var i = 0; i < props.count; i++){\n        outarray.push(<Star StarSpeed=\"10%\" position={{top: getRandomInt(5, 100) + \"vh\", left: getRandomInt(1, 99) + \"vw\"}} zIndex={-1} key={\"key\" + i}></Star>)\n    }\n\n    return (\n\n        <>\n         {outarray}\n        </>\n\n    );\n\n  }\n\nfunction getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}","import Space from './Space';\nimport {ParallaxContainer} from 'parallax-react-js';\n\nfunction View () {\n    return (\n        <div className=\"View\">\n            <ParallaxContainer>\n                <Space></Space>\n            </ParallaxContainer>\n        </div>\n    );\n}\n\nexport default View;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport View from './Components/View';\n\nReactDOM.render(\n  <React.StrictMode>\n    <View></View>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}